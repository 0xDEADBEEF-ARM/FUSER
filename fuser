##### 0 IMPORTS START #####
from tkinter import ttk, filedialog
import tkinter as tk
from tkinter.ttk import *
import time
import linecache
import re
import os
##### 0 IMPORTS END #####


# 0 IMPORTS
# 1 GLOBAL VARIABLES
# 2 FUNCTIONS
# 3 ROOT
# 4 INTERNAL VARIABLES
# 5 TABS
# 6 BUTTONS
# 7 LABELS
# 8 CHECKBUTTONS
# 9 ENTRY
# 10 DISABLE FUNCTIONS


# DISABLED FEATURES
#-END- UNUSED


##### 1 GLOBAL VARIABLES START #####

files= {}
for i in range(1,8):
	files[f'file{i}flag']=" "
	files[f'file{i}name']=" "
	files[f'file{i}path']=" "
	files[f'file{i}']=" "

vals= {}
for i in range(1,11,1):
	vals[f'val{i}']=0

widgets= {}
for i in range(1,6):
	widgets[f'ent{i}s']=" "
	widgets[f'ent{i}e']=" "

##### 1 GLOBAL VARIABLES END #####


##### 2 FUNCTIONS START #####

def browsefile():
	global name, path
	root.filename=filedialog.askopenfilename(initialdir="./", title="Select file", filetypes=(("gcode","*.gcode"), ("all files","*.*")))	
	name=os.path.basename(root.filename)
	path=root.filename
	
def savefile():
	global fusedfilepath
	ff=filedialog.asksaveasfile(initialdir="./", title="Save file", defaultextension=(".gcode"))
	fusedfilepath=str(ff.name)
	print(f"filepath : {fusedfilepath}")

def Button(**kwargs):

	global files

	for file in kwargs:
		fileflag=kwargs['file']
		match fileflag:
			case 1:
				print ("file 1")
				files['file1flag']=1
				browsefile()	
				files['file1name']=name
				files['file1path']=path
				lbl1.config(text=f"{files['file1name']}", foreground='green')
				
				

			case 2:
				print ("file 2")
				files['file2flag']=1
				widgets['ent1s']['state']='normal'
				widgets['ent1e']['state']='normal'
				browsefile()	
				files['file2name']=name
				files['file2path']=path
				lbl2.config(text=f"{files['file2name']}", foreground='green')
				
			case 3:
				print ("file 3")
				files['file3flag']=1
				widgets['ent2s']['state']='normal'
				widgets['ent2e']['state']='normal'
				browsefile()	
				files['file3name']=name
				files['file3path']=path
				lbl3.config(text=f"{files['file3name']}", foreground='green')
				
			case 4:
				print ("file 4")
				files['file4flag']=1
				widgets['ent3s']['state']='normal'
				widgets['ent3e']['state']='normal'
				browsefile()	
				files['file4name']=name
				files['file4path']=path
				lbl4.config(text=f"{files['file4name']}", foreground='green')
				
			case 5:
				print ("file 5")
				files['file5flag']=1
				widgets['ent4s']['state']='normal'
				widgets['ent4e']['state']='normal'
				browsefile()	
				files['file5name']=name
				files['file5path']=path
				lbl5.config(text=f"{files['file5name']}", foreground='green')
			case 6:
				print ("file 6")
				files['file6flag']=1
				widgets['ent5s']['state']='normal'
				widgets['ent5e']['state']='normal'
				browsefile()	
				files['file6name']=name
				files['file6path']=path
				lbl6.config(text=f"{files['file6name']}", foreground='green')
			case 7:
				print ("file 7")
				files['file7flag']=1
				browsefile()	
				files['file7name']=name
				files['file7path']=path
				lbl7.config(text=f"{files['file7name']}", foreground='green')


def fuse():
	global final, po, f, sw, start, end
	global checkbutton

	final=1
	sw=0
	po=1
	f = open(f'{fusedfilepath}', "a")

#FUSE - START SEQUENCE - START#####

	if files['file1flag']==1: #flag
	
		print(f"fusing file 1 : START SEQUENCE")
		while  True:
			line = linecache.getline(f"{files['file1path']}", po)
			if not line:
				break
			#find
			lin=line.find("LAYER:0")
			if(lin>-1):
				print("LAYER 0 found, break")
				break
			f.write(f"{line}")
			po=po+1
	
	else:
		print("no file 1 chosen")

#FUSE - START SEQUENCE - START#####

#FUSE - MIDDLE - START #####

	for x in range(2,7,1):

		start=vars[f"en{x-1}start"].get()
		end=vars[f"en{x-1}end"].get()
		checkbutton=checkbtn.get()
		if checkbutton==0:
			start=start-1
			end=end-1

		if files[f"file{x}flag"]==1: #flag
		
			print(f"fusing file {x}")
			
			sw=0
			po=0
			lin=-1

			print(f"fusing file {x} : layers")
			while  True:
				po=po+1
				line = linecache.getline(f"{files[f'file{x}path']}", po)
				if not line:
					break
				#find
				lin=line.find(f"LAYER:{start}\n")
				
				
				if(lin>-1):
					print(f"LAYER{start} from file{x} found, start fusing")				

					while True:	
						line = linecache.getline(f"{files[f'file{x}path']}", po)
						if not line:
							break
						
						lin=line.find(f"LAYER:{end}\n")
						
						if(lin>-1):
							print(f"found end RAYER : {end}")
							sw=1
						f.write(f"{line}")
						po=po+1
						lin=line.find(";TIME_ELAPSED:")
						if(lin>-1 and sw==1):
							break
					 

		else:
			print(f"no file {x} chosen")
#FUSE - MIDDLE - END #####


#FUSE- END SEQUENCE - START#####

	if files['file7flag']==1: #flag
		print("fusing file 7 : END SEQUENCE")
		po=1
		while  True:
			line = linecache.getline(f"{files['file7path']}", po)
			if not line:
				break
			#find
			lin=line.find(";TIME_ELAPSED:")
			po=po+1
			if(lin>-1):
				final=po		
		while  True:
			line = linecache.getline(f"{files['file7path']}", final)
			if not line:
				break
			f.write(f"{line}")
			final=final+1

	else:
		print("no file 7 chosen")

	f.close()
	print("END FUSING FILE")

#FUSE- END SEQUENCE - END#####


##### 2 FUNCTIONS END #####	


##### 3 ROOT START #####
root = tk.Tk()
root.geometry('350x390')
root.title(' DEADBEEF-ARM - CURA FUSER ')
root.resizable(False, False)
##### 3 ROOT END #####


##### 4 INTERNAL VARIABLES START #####

vars= {}
for i in range(1,6):
	vars[f'en{i}start']=tk.IntVar()
	vars[f'en{i}end']=tk.IntVar()

checkbtn = tk.IntVar()

##### 4 INTERNAL VARIABLES END #####




##### 5 TABS START #####
tabs=ttk.Notebook(root)
tab1=tk.Frame(tabs)
tabs.add(tab1, text=" CURA FUSE ")
tab2=tk.Frame(tabs)
tabs.add(tab2, text=" INFO ")
tabs.pack(expand=1, fill='both')
##### 5 TABS END #####




##### 6 BUTTONS START #####

#---select file---
btn1=ttk.Button(tab1, text="select file", command=lambda: [Button(file=1)]) #dziala jako ttk
btn1.place(x=10, y=10)

#---select file---
btn2=ttk.Button(tab1, text="select file", command=lambda: [Button(file=2)]) #dziala jako ttk
btn2.place(x=10, y=60)

#---select file---
btn3=ttk.Button(tab1, text="select file", command=lambda: [Button(file=3)]) #dziala jako ttk
btn3.place(x=10, y=110)

#---select file---
btn4=ttk.Button(tab1, text="select file", command=lambda: [Button(file=4)]) #dziala jako ttk
btn4.place(x=10, y=160)

#---select file---
btn5=ttk.Button(tab1, text="select file", command=lambda: [Button(file=5)]) #dziala jako ttk
btn5.place(x=10, y=210)

#---select file---
btn6=ttk.Button(tab1, text="select file", command=lambda: [Button(file=6)]) #dziala jako ttk
btn6.place(x=10, y=260)

#---select file---
btn7=ttk.Button(tab1, text="select file", command=lambda: [Button(file=7)]) #dziala jako ttk
btn7.place(x=10, y=310)

#---select file---
btn8=ttk.Button(tab1, text="FUSE", command=lambda: [savefile(), fuse()]) #dziala jako ttk
btn8.place(x=250, y=310)

##### 6 BUTTONS END #####


##### 7 LABELS START #####


lbl0=ttk.Label(tab1, text="<- START SEQUENCE")
lbl0.place(x=90, y=10)

lbl1=ttk.Label(tab1, text="FILE 1")
lbl1.place(x=10, y=35)
lbl1.config(text="FILE 1", foreground='red')

lbl2=ttk.Label(tab1, text="FILE 2")
lbl2.place(x=10, y=85)
lbl2.config(text="FILE 2", foreground='red')

lbl3=ttk.Label(tab1, text="FILE 3")
lbl3.place(x=10, y=135)
lbl3.config(text="FILE 3", foreground='red')

lbl4=ttk.Label(tab1, text="FILE 4")
lbl4.place(x=10, y=185)
lbl4.config(text="FILE 4", foreground='red')

lbl5=ttk.Label(tab1, text="FILE 5")
lbl5.place(x=10, y=235)
lbl5.config(text="FILE 5", foreground='red')

lbl6=ttk.Label(tab1, text="FILE 6")
lbl6.place(x=10, y=285)
lbl6.config(text="FILE 6", foreground='red')

lbl7=ttk.Label(tab1, text="FILE 7")
lbl7.place(x=10, y=335)
lbl7.config(text="FILE 7", foreground='red')

lbl8=ttk.Label(tab1, text="start layer")
lbl8.place(x=100, y=40)
lbl8.config(text="start layer", foreground='black')

lbl9=ttk.Label(tab1, text="end layer")
lbl9.place(x=200, y=40)
lbl9.config(text="end layer", foreground='black')

lbl10=ttk.Label(tab1, text="<- END SEQUENCE")
lbl10.place(x=90, y=310)

lbl11=ttk.Label(tab2, text=" This program combines up to five .gcode files. \n It uses layer numeration starting from 1, just like in \n cura slicer preview (gcodes produced by cura slicer \n start counting layers from 0).\n To choose only one layer 'start layer' should be equal\n to 'end layer number.'")
lbl11.place(x=10, y=10)
#lbl1.config(text="end layer", foreground='black')


##### 7 LABELS END #####



##### 8 CHECKBUTTONS START #####

cbtn=ttk.Checkbutton(tab2, text="check this box if You want to start counting layers \n from 0 (default - unchecked, counting layers from 1)", variable=checkbtn, onvalue=1, offvalue=0) #dziala jako ttk
cbtn.place(x=10, y=120)
##### 8 CHECKBUTTONS END #####


##### 12 ENTRY START #####

for i in range(1,6): #1-5
	widgets[f'ent{i}s']=ttk.Entry(tab1, width="4", textvariable=vars[f'en{i}start'])
	widgets[f'ent{i}e']=ttk.Entry(tab1, width="4", textvariable=vars[f'en{i}end'])

widgets['ent1s'].place(x=110, y=60)
widgets['ent1e'].place(x=210, y=60)
widgets['ent2s'].place(x=110, y=110)
widgets['ent2e'].place(x=210, y=110)
widgets['ent3s'].place(x=110, y=160)
widgets['ent3e'].place(x=210, y=160)
widgets['ent4s'].place(x=110, y=210)
widgets['ent4e'].place(x=210, y=210)
widgets['ent5s'].place(x=110, y=260)
widgets['ent5e'].place(x=210, y=260)

##### 12 ENTRY END #####


##### DISABLED FEATURES START #####

for i in range(1,6): #1-5
	widgets[f'ent{i}s']['state']='disabled'
	widgets[f'ent{i}e']['state']='disabled'

##### DISABLED FEATURES END #####

root.mainloop()
